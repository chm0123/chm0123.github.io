<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-12-30T18:07:27.083Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习笔记</title>
    <link href="http://example.com/2022/12/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://example.com/2022/12/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</id>
    <published>2022-12-30T18:06:17.000Z</published>
    <updated>2022-12-30T18:07:27.083Z</updated>
    
    <content type="html"><![CDATA[<p>vimdiff：同时查看多个文件，可以用qall退出，或者多次wq<br>ps -aux:查看系统有哪些进程<br>top:类似Windows任务管理器<br>whereis或which:查找文件的绝对路径<br>例如：whereis ls：查找ls的绝对路径<br>date：获取系统的时间<br>echo $PATH：查看当前的环境变量<br>pwd：显示当前路径</p><p>export PATH&#x3D;$PATH:&#x2F;home&#x2F;chm&#x2F; ：修改环境变量</p><p>ls -i:查看文件索引节点号<br>ls -a:查看当前目录下所有文件，包括隐藏文件<br>ls -ai:可以查看当前文件的索引节点号</p><p>ipcs -m:查看系统中有哪些共享内存<br>ipcrm -m 共享内存id：删除共享内存</p><p>kill -l：查看系统中所有的信号<br>man 7 signal：查看信号系统默认动作</p><p>ls -help:查看ls命令的帮助信息<br>man 1 命令:用于查看命令的帮助信息,例如，man 1 ls表示查看ls的帮助信息，其中 1 表示从man手册第一章开始找<br>man ls:表示从man手册第一章起开始找ls的帮助信息</p><p>if+Tab+Tab &#x3D; 以if为开头的命令集</p><p>命令 &gt; 文件名:先清空文件内容，然后将命令的输出结果写入文件里<br>例如ls - test.txt</p><p>命令 &gt;&gt; 文件名:以追加的方式将命令的输出结果写入文件里</p><p>ls –help | more:以每页的方式查看ls命令的帮助信息<br>ls &#x2F;etc | wc -w:统计根目录下的etc目录中的文件数</p><p>clear:清屏，作用等于键盘按下crtl+l</p><p>tree -L 3:显示三层目录树</p><p>cd -:回到刚才所在的路径</p><p>cat -n 文件名:带行号的显示文件内容</p><p>rm 文件名:删除指定文件<br>rm -rf 目录文件名:删除指定目录，-r代表删除文件夹，-f代表无论文件夹存不存在都不报错</p><p>cp 目录1 目录2 -a:将目录1复制到目录2中<br>cp -r -v 目录1 目录2 :将目录1复制到目录2中，拷贝文件夹必须添加-r，<br>-v表示显示拷贝进度</p><p>mv 文件名 目录名:将文件移动到指定的目录中<br>mv 目录1 目录2:将目录1移动到目录2中<br>mv 文件1 文件2:若文件2不存在，则功能为重命名</p><p>mkdir 目录名:创建一个目录文件<br>mkdir 目录1 目录2…:创建多个目录<br>mkdir -p 目录1&#x2F;目录2&#x2F;目录3&#x2F;…:嵌套创建多个目录</p><p>touch 文件名:创建一个文件，若文件已存在，则touch会修改文件的当前时间戳</p><p>find 路径 -name 文件名:在指定的路径下查找指定文件，会从指定路径下包括所有的子目录中寻找</p><p>grep 查找信息 文件名:在指定文件中查找指定内容，并整行显示<br>grep 查找信息 文件名 -n:在指定文件中查找指定内容，带行号的整行显示<br>grep 查找信息 * -n:在当前目录中查找指定信息，带行号的整行显示<br>grep 查找信息 * -R -n:在当前目录及子目录中查找指定信息，带行号的整行显示</p><p>ln 源文件名 链接文件名 -s:创建一个链接文件(类似windows的快捷方式)<br>如果修改链接文件里的内容，则源文件也修改<br>如果删除链接文件，对源文件没有影响<br>如果删除源文件，则链接文件失效</p><p>gzip格式压缩命令：tar zcvf 压缩包包名.tar.gz 文件1 文件2 …<br>gzip格式压缩包解压缩命令：<br>（1）tar zxcf 压缩包包名.tar.gz<br>（2）tar zxcf 压缩包包名.tar.gz -c 路径：解压到指定路径<br>bzp2格式压缩命令：tar jcvf 压缩包包名.tar.bz2 文件1 文件2 …<br>bzp2格式压缩包解压缩命令：<br>（1）tar jxcf 压缩包包名.tar.bz2<br>（2）tar jxcf 压缩包包名.tar.bz2 -c 路径：解压到指定路径</p><p>vi 文件名：在vi编辑器中打开或创建一个文件，并将光标置于行首<br>vi +n 文件名：在vi编辑器中打开已存在文件，并将光标置于第n行行首</p><p>vi最后一行模式下的关键词：<br>:w ：保存文件<br>:wq ：保存并退出当前文件<br>:x ：保存并退出当前文件<br>:q! ：不保存，强制退出<br>:w 文件名 ：将当前文件内容另存到某一文件</p><p>vi编辑模式下的关键词：<br>u：撤销<br>Crtl+r ：反撤销<br>[n]x ：删除光标后n个字符，例如3x<br>[n]X ：删除光标前n个字符，例如6X<br>[n]dd ：剪切从当前行开始的n行(只要剪切不粘贴，认为就是删除)，例如4dd<br>[n]yy：复制从当前行开始的n行，例如4yy<br>p ：把粘贴板的内容插入到当前行<br>. ：执行上一次操作<br>shift+zz：保存退出当前文件<br>编辑模式下移动光标：<br>[n]G：将光标定位到第n行开始处<br>例子：<br>5G：将光标移动到第5行开始处<br>G：将光标定位到文件结束处<br>gg：将光标定位到文件开始处<br>编辑模式下的查找：<br>&#x2F;字符串：从光标开始处向文件尾查找字符串<br>n：向上查找<br>N：向下查找</p><p>sudo ctags -R：创建索引文件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vimdiff：同时查看多个文件，可以用qall退出，或者多次wq&lt;br&gt;ps -aux:查看系统有哪些进程&lt;br&gt;top:类似Windows任务管理器&lt;br&gt;whereis或which:查找文件的绝对路径&lt;br&gt;例如：whereis ls：查找ls的绝对路径&lt;br&gt;dat</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>linux大作业</title>
    <link href="http://example.com/2022/12/30/linux%E5%A4%A7%E4%BD%9C%E4%B8%9A/"/>
    <id>http://example.com/2022/12/30/linux%E5%A4%A7%E4%BD%9C%E4%B8%9A/</id>
    <published>2022-12-30T17:58:15.000Z</published>
    <updated>2022-12-30T18:04:23.944Z</updated>
    
    <content type="html"><![CDATA[<p>1.安装nodejs:生成静态页面<br>sudo apt-get install nodejs<br>用nodejs -v 检查版本看是否安装上<br>2.安装npm：一会用来安装hexo<br>sudo apt-get insall npm<br>3.正式安装hexo<br>sudo npm install -g hexo</p><p>预备工作搞定，为了方便处理先建立一个hexo的文件夹<br>mkdir hexo<br>cd hexo<br>建立自己的博客 hexo init blog<br>cd blog<br>npm install<br>通过查看版本可以看到自己的hexo的构建hexo -v</p><p>启动自己本地的博客<br>hexo g#生成静态网页<br>hexo s#运行本地服务器<br>这个时候进入<a href="http://localhost:4000这个网站就可以看到自己本地的博客了">http://localhost:4000这个网站就可以看到自己本地的博客了</a></p><p>@2：将本地博客部署到git上这样就可以直接访问了</p><p>步骤1，注册一个git账户<br>步骤2，设置自己的user.name user.eamil:<br>git config –global user.name “chm0123”<br>gut config –global user.email”<a href="mailto:&#x32;&#54;&#50;&#x38;&#57;&#x37;&#x37;&#x36;&#x39;&#x35;&#64;&#x71;&#x71;&#46;&#99;&#111;&#109;">&#x32;&#54;&#50;&#x38;&#57;&#x37;&#x37;&#x36;&#x39;&#x35;&#64;&#x71;&#x71;&#46;&#99;&#111;&#109;</a>“<br>步骤3：生成shh密匙（为什么要生成ssh密匙呢是通过密匙登录上github，嗯我是这样理解的）：<br>ssh-****** -t rsa -C user.email然后会有默认的保存地址，不想修改的可以直接回车<br>查看自己的密匙 cat ~&#x2F;.ssh&#x2F;id_rsa<br>将它复制下来添加到自己的github账户里面</p><p>步骤4：创建自己的github仓库，这个时候用户名取的好的效果就出来了，仓库命名格式为“账户名”.github.io（去掉引号）</p><p>步骤五：修改自己的博客配置文件<br>先进入自己的博客命名的位置<br>然后打开_config.yml文件<br>直接拉到最下面修改配置内容：<br>deploy:<br>type: git<br>repo: [email protected]:(用户名）&#x2F;（用户名）.github.io.git #括号里面换成自己的用户名和仓库名,去掉括号<br>branch: master</p><p>hexo g生成静态页面（可以通过爬虫看到这个目前是一个静态网站）<br>hexo d 将文件内容部署到github仓库<br>hexo s布置到本地就是上面那个<br>hexo new “”(编辑新内容）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.安装nodejs:生成静态页面&lt;br&gt;sudo apt-get install nodejs&lt;br&gt;用nodejs -v 检查版本看是否安装上&lt;br&gt;2.安装npm：一会用来安装hexo&lt;br&gt;sudo apt-get insall npm&lt;br&gt;3.正式安装hexo&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux大作业</title>
    <link href="http://example.com/2022/12/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/12/30/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-12-30T16:26:11.000Z</published>
    <updated>2022-12-30T16:30:59.556Z</updated>
    
    <content type="html"><![CDATA[<p>vimdiff：同时查看多个文件，可以用qall退出，或者多次wq<br>ps -aux:查看系统有哪些进程<br>top:类似Windows任务管理器<br>whereis或which:查找文件的绝对路径<br>例如：whereis ls：查找ls的绝对路径<br>date：获取系统的时间<br>echo $PATH：查看当前的环境变量<br>pwd：显示当前路径</p><p>export PATH&#x3D;$PATH:&#x2F;home&#x2F;chm&#x2F; ：修改环境变量</p><p>ls -i:查看文件索引节点号<br>ls -a:查看当前目录下所有文件，包括隐藏文件<br>ls -ai:可以查看当前文件的索引节点号</p><p>ipcs -m:查看系统中有哪些共享内存<br>ipcrm -m 共享内存id：删除共享内存</p><p>kill -l：查看系统中所有的信号<br>man 7 signal：查看信号系统默认动作</p><p>ls -help:查看ls命令的帮助信息<br>man 1 命令:用于查看命令的帮助信息,例如，man 1 ls表示查看ls的帮助信息，其中 1 表示从man手册第一章开始找<br>man ls:表示从man手册第一章起开始找ls的帮助信息</p><p>if+Tab+Tab &#x3D; 以if为开头的命令集</p><p>命令 &gt; 文件名:先清空文件内容，然后将命令的输出结果写入文件里<br>例如ls - test.txt</p><p>命令 &gt;&gt; 文件名:以追加的方式将命令的输出结果写入文件里</p><p>ls –help | more:以每页的方式查看ls命令的帮助信息<br>ls &#x2F;etc | wc -w:统计根目录下的etc目录中的文件数</p><p>clear:清屏，作用等于键盘按下crtl+l</p><p>tree -L 3:显示三层目录树</p><p>cd -:回到刚才所在的路径</p><p>cat -n 文件名:带行号的显示文件内容</p><p>rm 文件名:删除指定文件<br>rm -rf 目录文件名:删除指定目录，-r代表删除文件夹，-f代表无论文件夹存不存在都不报错</p><p>cp 目录1 目录2 -a:将目录1复制到目录2中<br>cp -r -v 目录1 目录2 :将目录1复制到目录2中，拷贝文件夹必须添加-r，<br>-v表示显示拷贝进度</p><p>mv 文件名 目录名:将文件移动到指定的目录中<br>mv 目录1 目录2:将目录1移动到目录2中<br>mv 文件1 文件2:若文件2不存在，则功能为重命名</p><p>mkdir 目录名:创建一个目录文件<br>mkdir 目录1 目录2…:创建多个目录<br>mkdir -p 目录1&#x2F;目录2&#x2F;目录3&#x2F;…:嵌套创建多个目录</p><p>touch 文件名:创建一个文件，若文件已存在，则touch会修改文件的当前时间戳</p><p>find 路径 -name 文件名:在指定的路径下查找指定文件，会从指定路径下包括所有的子目录中寻找</p><p>grep 查找信息 文件名:在指定文件中查找指定内容，并整行显示<br>grep 查找信息 文件名 -n:在指定文件中查找指定内容，带行号的整行显示<br>grep 查找信息 * -n:在当前目录中查找指定信息，带行号的整行显示<br>grep 查找信息 * -R -n:在当前目录及子目录中查找指定信息，带行号的整行显示</p><p>ln 源文件名 链接文件名 -s:创建一个链接文件(类似windows的快捷方式)<br>如果修改链接文件里的内容，则源文件也修改<br>如果删除链接文件，对源文件没有影响<br>如果删除源文件，则链接文件失效</p><p>gzip格式压缩命令：tar zcvf 压缩包包名.tar.gz 文件1 文件2 …<br>gzip格式压缩包解压缩命令：<br>（1）tar zxcf 压缩包包名.tar.gz<br>（2）tar zxcf 压缩包包名.tar.gz -c 路径：解压到指定路径<br>bzp2格式压缩命令：tar jcvf 压缩包包名.tar.bz2 文件1 文件2 …<br>bzp2格式压缩包解压缩命令：<br>（1）tar jxcf 压缩包包名.tar.bz2<br>（2）tar jxcf 压缩包包名.tar.bz2 -c 路径：解压到指定路径</p><p>vi 文件名：在vi编辑器中打开或创建一个文件，并将光标置于行首<br>vi +n 文件名：在vi编辑器中打开已存在文件，并将光标置于第n行行首</p><p>vi最后一行模式下的关键词：<br>:w ：保存文件<br>:wq ：保存并退出当前文件<br>:x ：保存并退出当前文件<br>:q! ：不保存，强制退出<br>:w 文件名 ：将当前文件内容另存到某一文件</p><p>vi编辑模式下的关键词：<br>u：撤销<br>Crtl+r ：反撤销<br>[n]x ：删除光标后n个字符，例如3x<br>[n]X ：删除光标前n个字符，例如6X<br>[n]dd ：剪切从当前行开始的n行(只要剪切不粘贴，认为就是删除)，例如4dd<br>[n]yy：复制从当前行开始的n行，例如4yy<br>p ：把粘贴板的内容插入到当前行<br>. ：执行上一次操作<br>shift+zz：保存退出当前文件<br>编辑模式下移动光标：<br>[n]G：将光标定位到第n行开始处<br>例子：<br>5G：将光标移动到第5行开始处<br>G：将光标定位到文件结束处<br>gg：将光标定位到文件开始处<br>编辑模式下的查找：<br>&#x2F;字符串：从光标开始处向文件尾查找字符串<br>n：向上查找<br>N：向下查找</p><p>sudo ctags -R：创建索引文件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vimdiff：同时查看多个文件，可以用qall退出，或者多次wq&lt;br&gt;ps -aux:查看系统有哪些进程&lt;br&gt;top:类似Windows任务管理器&lt;br&gt;whereis或which:查找文件的绝对路径&lt;br&gt;例如：whereis ls：查找ls的绝对路径&lt;br&gt;dat</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/12/30/hello-world/"/>
    <id>http://example.com/2022/12/30/hello-world/</id>
    <published>2022-12-30T14:56:54.375Z</published>
    <updated>2022-12-30T14:56:54.375Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
